{% comment %}
Warning: DO NOT EDIT THIS FILE!
Editing this file could break Cross Sell app functionality
version: xsell-v.2.0.0 [Do not remove version info]
support webite: http://help.csell.co
{% endcomment %}
{% if template contains 'product' %}
  	{% assign cscurrentpage = 'product' %}
{% endif %}
{% if template == 'cart' %}
  	{% assign cscurrentpage = 'cart' %}
	{% assign cssmartcart = 'on' %}
{% endif %}

{% assign cartitems = ''%}
{% for item in cart.items %}
	{% if forloop.first == true %}
		{% capture cartitems %}{{ item.product.handle }}{% endcapture %}
	{% else %}
		{% capture cartitems %}{{ cartitems }},{{ item.product.handle }}{% endcapture %}
	{% endif %}
{% endfor %}

{% if shop.metafields.shopCrosssell.settings != null %}

<style type="text/css">
  #cross-sell{float:left;clear:both;width:100%;}
  h3.crossselltitle{margin:25px 0;text-align: center;}
  .cross-sell{overflow:hidden;list-style-type:none;margin:0;padding:0;clear:both;text-align:center;}
  .cross-sell *{font-size:13px; text-align:center; padding:0;}
  .cross-sell h4{border:none;margin:5px 0 0 0;line-height:1.5;}
  .cross-sell div.image{height:180px;}
  .cross-sell li{float: none;display:inline-block;vertical-align: text-top;padding:0 0 10px 0;margin:0 14px 30px 0;position:relative;width:172px;}
  .cross-sell li:last-child{margin-right:0;}
  .cross-sell li .image{}
  .cross-sell li .image img{margin:0px 0 10px 0px;float:left;width:100%;}
  .cross-sell li .producttitle{float:left;padding:5px 0;width:100%;min-height:56px;}
  .cross-sell li a{text-decoration:none;font-size:115%;line-height:20px;padding:5px;}
  #cross-sell article.product-item .money {font-size:0.814em !important;color:#9C9E9C !important;}
  #cross-sell article{text-align:center !important;}
  .cross-sell .xs-compare-at-price{padding-right: 5px;display: inline-block;text-decoration: line-through;}
  .cross-sell .xs-vendor-name{padding:5px 0;width:100%;display:inline-block;}
  .cs-clearfix:after {content: "."; visibility: hidden; display: block; height: 0; clear: both;}
  .cross-sell .product-item {text-align:center !important;}
</style>

<div class="cs-clearfix"></div>
<div id="cross-sell"></div>
<div class="cs-clearfix"></div>

<script type="text/javascript" charset="utf-8">

  var xsellSettings = xsellSettings || {};
{% if cartitems %}
    var cartitems = '{{ cartitems }}';
	xsellSettings.cartitems = cartitems.split(',');
{% else %}
	xsellSettings.cartitems = [];
{% endif %}

    xsellSettings.shopMetafields = eval({{ shop.metafields.shopCrosssell | json }});
    xsellSettings.crosssellsettings = eval({{ shop.metafields.shopCrosssell.settings | json }});
    xsellSettings.money_format = '{{shop.money_format}}';
    xsellSettings.xsmainproducthandle = '{{ product.handle }}';
    xsellSettings.currentpagetype = '{{ cscurrentpage }}';
    xsellSettings.xsimagesize = 'large';

  	xsellSettings.xsrandomizeproductpage = xsellSettings.crosssellsettings[0]['randomizeproductpage'];
  	xsellSettings.xsrandomizecartpage = xsellSettings.crosssellsettings[0]['randomizecartpage'];
  	xsellSettings.xsmustbeavailable = xsellSettings.crosssellsettings[0]['mustbeavailable'];
  	xsellSettings.xshideifincart = xsellSettings.crosssellsettings[0]['hideifincart'];

  	xsellSettings.xsdisplaycompareatprice = xsellSettings.crosssellsettings[0]['displaycompareatprice'];
  	xsellSettings.xsdisplaysalebadge = xsellSettings.crosssellsettings[0]['displaysalebadge'];
  	xsellSettings.xsdisplaypricevarieslabel = xsellSettings.crosssellsettings[0]['displaypricevarieslabel'];
  	xsellSettings.xsdisplayvendor = xsellSettings.crosssellsettings[0]['displayvendor'];


  {% if cscurrentpage == 'product' %}
    //product specific settings
    var crossselltitleproductpage = xsellSettings.crosssellsettings[0]['titleproductpage'];
    var crossselltitleproductpagedefault = xsellSettings.crosssellsettings[0]['titleproductpagedefault'];
    var crosssellshowdefault = xsellSettings.crosssellsettings[0]['showdefault'];

    xsellSettings.crosssellmaxitems = xsellSettings.crosssellsettings[0]['productpagemaxitems'];
  {% else if cscurrentpage == 'cart' %}
    //cart/basket settings
    var crossselltitlecheckoutpage = xsellSettings.crosssellsettings[0]['titlecheckoutpage'];
    var crosssellshowcheckout = xsellSettings.crosssellsettings[0]['showcheckout'];

    xsellSettings.crosssellmaxitems = xsellSettings.crosssellsettings[0]['checkoutpagemaxitems'];
  {% endif %}


</script>

{% endif %}

<script type="text/javascript" charset="utf-8">
var xsproductsData = '';
xsellSettings.xstitle = "";

var xsappinitfrontend = function(){
  {% if cscurrentpage == 'product' %}
    //First of all, see if this product has any handpicked crosssell items
    if(crosssellshowdefault != '4'){
      {% if product.metafields.productDetails.crosssell != null %}
      //See if the selected product has any cross-sell items
      xsproductsData = eval({{ product.metafields.productDetails.crosssell | json }});
      if(crossselltitleproductpage.length){
        xsellSettings.xstitle = crossselltitleproductpage;
      }
      {% endif %}
    }
    if(crosssellshowdefault == '1' || (crosssellshowdefault == '2' && xsproductsData == '')){
      //Show default cross-sell items on all product pages? Override all
      //See if any default cross-sell items have been selected for the product page
      {% if shop.metafields.shopCrosssell.default != null %}
      xsproductsData = eval({{ shop.metafields.shopCrosssell.default | json }});
      if(crossselltitleproductpagedefault.length){
        xsellSettings.xstitle = crossselltitleproductpagedefault;
      }
      {% endif %}
    }
  {% else %}

    if(crosssellshowcheckout == '2'){
      {% if shop.metafields.shopCrosssell.settings != null %}
      {% assign crosssellsettings = shop.metafields.shopCrosssell.settings | remove: "[{" | remove: "}]" | strip | replace: '","', '"|||"' | split: '|||' %}
      {% for settingpair in crosssellsettings %}
      {% assign setting = settingpair    | strip | split: ' : ' %}
      {% capture main %}{{ setting[0] | replace: '"', '' }}{% endcapture %}
      {% case main %}
      {% when 'cssmartcart' %}
      {% capture cssmartcart %}{{ setting[1] | replace: '"', '' }}{% endcapture %}
      {% endcase %}
      {% endfor %}
      {% endif %}

      {% if cssmartcart == 'on' %}
      {% for item in cart.items %}
      {% assign csitem = all_products[item.product.handle] %}
      {% if csitem.metafields.productDetails.crosssell != null %}
      {% assign csitemmetafield = csitem.metafields.productDetails.crosssell %}
      {% capture cssmartcartxsells %}{{ csitemmetafield }}{% endcapture %}
      {% break %}
      {% endif %}
      {% endfor %}
      {% endif %}

      {% comment %}Grab default Cart Cross-Sells if set{% endcomment %}
      {% if shop.metafields.shopCrosssell.checkout != null %}
      	{% assign csdefaultcartxsells = shop.metafields.shopCrosssell.checkout %}
      {% endif %}

      {% if cssmartcart == 'on' and cssmartcartxsells != null %}
      	{% assign _xsproductsData = cssmartcartxsells %}
      {% else %}
      	{% assign _xsproductsData = csdefaultcartxsells %}
      {% endif %}

      xsproductsData = eval({{ _xsproductsData | json }});

      if(crossselltitlecheckoutpage.length){
        xsellSettings.xstitle = crossselltitlecheckoutpage;
      }

    }
  {% endif %}

  if(xsproductsData){
    //Set the maximum number of items that should be shown?
    if (xsproductsData.length && (xsproductsData[0] !== '')){
      window.xsellData = {
        data: xsproductsData,
        settings: xsellSettings,
        themeCustomization: function(){
          addThemeCustomization();
        }
      }
    } else {
      //There are no cross-sells to display
      var elem = document.getElementById("cross-sell");
      elem.parentNode.removeChild(elem);
    }
  }
}

  // load jquery and init
  function xsloadScript(url, callback) {
    var script = document.createElement("script");
    script.type = "text/javascript";

    if (script.readyState) { // IE support
      script.onreadystatechange = function() {
        if (script.readyState == "loaded" || script.readyState == "complete") {
          script.onreadystatechange = null;
          callback();
        }
      };
    } else { // other browsers
      script.onload = function() {
        callback();
      };
    }
    script.src = url;
    document.getElementsByTagName("head")[0].appendChild(script);
  };


  if ((typeof jQueryxsApp === 'undefined') || (parseFloat(jQueryxsApp.fn.jquery) < 3)) {
    xsloadScript('//ajax.googleapis.com/ajax/libs/jquery/3.2.1/jquery.min.js', function() {
      jQueryxsApp = jQuery.noConflict(true);
      xsappinitfrontend();
    });
  } else {
    xsappinitfrontend();
  }
var addThemeCustomization = function(){
 xsellLib.customBuildxsellsoutput = function(xsellitems, numproducts){
   // settings from GUI
  	var xsmustbeavailable = xsellSettings.xsmustbeavailable;
  	var xshideifincart = xsellSettings.xshideifincart;
  	var xsdisplaycompareatprice = xsellSettings.xsdisplaycompareatprice;
  	var xsdisplaysalebadge = xsellSettings.xsdisplaysalebadge;
  	var xsdisplaypricevarieslabel = xsellSettings.xsdisplaypricevarieslabel;
  	var xsdisplayvendor = xsellSettings.xsdisplayvendor;
    // START HERE
    var xsimagesize = 'large';
    var xsvendoroutput = '';
    var xspricevarieslabel = '';
    var xscompareatprice = '';
    var xscompareatpricestring = '';
  	var xssalepricestring = '';
  	var xspriceoutput = '';
    var xssalebadge = '<span class="badge badge--sale"><span class="badge__text">SALE</span></span>';
  	var xssalebadgeoutput = '';
    var saleclass = ' xs-sale';
    var fromlabel = '<em>from</em>';
    var xsprice = '';
  	for(var x=0; x < numproducts; x++)
				{
                  	var xsproductdata = xsellitems[x];

                  	//Show Images
                    if(xsproductdata.images.length > 1)
                    {
                      var csimage = xsellLib.productimageurls(xsproductdata.images[0]);
                      var csimagetwo = xsellLib.productimageurls(xsproductdata.images[1]);
                    }
                    else if(xsproductdata.images.length == 1)
                    {
                      var csimage = xsellLib.productimageurls(xsproductdata.images[0]);
                      var csimagetwo = 'https://cdn.shopify.com/s/images/admin/no-image-'+xsimagesize+'.gif';
                    }
                    else
                    {
                      var csimage = 'https://cdn.shopify.com/s/images/admin/no-image-'+xsimagesize+'.gif';
                      var csimagetwo = csimage;
                    }

                  	//Display Vendor
                     if(xsdisplayvendor)
                     {
                       xsvendoroutput = '<div class="xs-vendor-name"><a href="' + xsproductdata.url +'">' + xsproductdata.vendor + '</a></div>';
                     }



                    //Build Price Output
                    xsprice = xsellLib.xsformatMoney(xsproductdata.price, '{{ shop.money_format }}');


					//Show price varies label?
                    if(xsdisplaypricevarieslabel)
                    {
                    	if(xsproductdata.price_varies)
                      	{
                          xspricevarieslabel = 'FROM: ';
                      	}
                      	else
                      	{
                        	xspricevarieslabel = '';
                      	}
                    }

                    xspriceoutput = '<span class="money">' + xspricevarieslabel + xsprice + '</span>';

                    if(xsdisplaycompareatprice)
                    {
  	                  if(!xsproductdata.price_varies && (xsproductdata.compare_at_price > xsproductdata.price))
        	            {
            	            xscompareatprice = xsellLib.xsformatMoney(xsproductdata.compare_at_price, '{{ shop.money_format }}');
                          xscompareatpricestring = '<span class="money">' + xscompareatprice + '</span>';
                          xssalepricestring = '<span class="money">' + xsprice + '</span>';
                          xspriceoutput = '<span class="money' + saleclass + '">' + xscompareatpricestring + ' ' + xspricevarieslabel + xssalepricestring + '</span>';
                      }
                    }

                    //Show Sale Badge Output
                    if(xsdisplaysalebadge)
                    {
                      if(xsproductdata.compare_at_price > xsproductdata.price)
                      {
                        xssalebadgeoutput = xssalebadge;
                      }
					  else
                      {
                        xssalebadgeoutput = '';
                      }
                    }

                    xsellLib.xselloutput += '<article class="product-item" data-product-item-id="' +xsproductdata.id +'" ' + xsproductdata["order"] + '">'
                                + '<div class="product-item-image">'
                                + '<a href="' + xsproductdata.url +'">'
                  			        + '<img src="' + csimage + '" />'
                                + '</a>'
                                //+ xssalebadgeoutput
                                + '</div>'
                                +'<h3 class="product-item-title">'
                                +'<a href="'+xsproductdata.url+'">'+xsproductdata.title+'</a>'
                                + '</h3>'
                                //+ '<span class="stamped-product-reviews-badge" data-id="'+xsproductdata.id+'" style="display: block;">{{ product.metafields.stamped.badge }}</span>'
                                //+'<p class="product-item-price sale accent-text" data-price="'+xsproductdata.price_min+'" data-price-was="'+xsproductdata.compare_at_price_min+'">'
                                //+'<span class="money">'+xsproductdata.price_min+'</span> - {{ percentageSaved }} {{ 'collections.product_item.off' | t }}'
                                //+'</p>'
                                //+'<p class="product-item-price was accent-text">{{ 'collections.product_item.was' | t }} <span class="money">'+xsproductdata.compare_at_price_min+'</span></p>'
                                //+'<p class="product-item-price accent-text">'
                                + xspriceoutput
                                //+ '</p>'
                                + '</article>';
				}
				if(xsellLib.xselloutput != '')
				{
                	jQueryxsApp('#cross-sell').append('<section id="related-products" class="section"><div class="section-title single-borders"><h2 class="accent-text">' + xsellLib.settings.xstitle + '</h2></div><div class="product-list clearfix">' + xsellLib.xselloutput + '</div></div></section>');
                }
     //end
    }
}
</script>
